
<% layout( 'm_layout' ) -%>

<div class="jumbotron">
	<div class="container">
  <h2>Modulsuche</h2>
  <h3 data-i18n="app.name"></h3>
  
  <div class="search-fields">
		<div id="row-0" class="search-field-row">
			<select id="row-0-operator" class="select select-operator">
				<option>AND</option>
				<option>OR</option>
				<option>NOT</option>
				<option>FUZZY</option>
			</select>
			<select id="row-0-field" class="select select-field">
				<option disabled hidden value='' data-key=""></option>
				<optgroup>
				<option data-multi="false" selected data-type="string" data-key="modultitel">Modultitel</option>
				<option data-multi="false" data-type="string" data-key="modulnr1">Modulnummer</option>
				<option data-multi="true"  data-type="array"  data-key="tags" >Schlüsselwörter</option><!-- multi -->
				<option data-multi="true"  data-type="array"  data-key="university" >Hochschule</option><!-- multi -->
				<option data-multi="false" data-type="string" data-key="struktureinheit">Verantw. Struktureinheit</option>
				<option data-multi="true"  data-type="array"  data-key="courses" >Studiengang</option><!-- multi -->
				<option data-multi="true"  data-type="array"  data-key="type" >Type</option><!-- multi -->
				<option data-multi="true"  data-type="array"  data-key="language" >Sprache</option><!-- multi -->
				<option data-multi="true"  data-type="array"  data-key="summer_winter" >WS/SS</option><!-- multi -->
				<option data-multi="false" data-type="string" data-key="modulverantwortlicher">Modulverantwortlicher</option>
				</optgroup>
				<optgroup label="- - - - - - - - - - - - - - - - - - ">
				<option data-multi="true"  data-type="array"  data-key="sws" >Lehrform</option><!-- multi -->
				<option data-multi="false" data-type="number" data-key="sws_total">SWS</option><!-- number -->
				<option data-multi="false" data-type="number" data-key="sws">SWS Selbststudium</option><!-- number -->
				<option data-multi="false" data-type="number" data-key="workload">Workload</option><!-- number -->
				<option data-multi="false" data-type="number" data-key="workload_self">Workload Selbststudium</option><!-- number -->
				<option data-multi="false" data-type="number" data-key="ects">ECTS</option><!-- number -->
				<option data-multi="true"  data-type="array"  data-key="pvl" >Prüfungsvorleistung</option><!-- multi -->
				<option data-multi="true"  data-type="array"  data-key="pl" >Prüfungsleistung</option><!-- multi -->
				</optgroup>
<!--				<option data-multi="false" data-key="lecturers">Weitere Lehrende</option>
				<option data-multi="false" data-key="remarks_general">Bemerkungen</option>		-->
		
			</select>
			<span id="row-0-input" class="select-input">
				<input hidden id="fulltext-search" class="mbase-search-container" type="text">
			</span>	
			<span id="row-0-remove" class="remove glyphicon glyphicon-remove mb-btn"></span>
		</div>	 
	</div>	
	
	<div id="add-field-row" class="mb-btn"><span class="glyphicon glyphicon-plus"></span> Suchfeld hinzufügen</div>	
	<div class="buttons">
     <button id="submitsearch" class="btn-default btn" type="submit">Suchen</button>  
     <a id="resetsearch" class="">Suche zurücksetzen</a>
  </div>

</div></div>

<div class="container">
	<h3 id="search-results-head" class="search-results-head" >Suchergebnisse <span id="search-results-count"></span></h3>
	
	<table id="table1"></table>
</div>

<script> 

var field_schemas = {};

$(document).ready(function() {
		
	// init module table
	initModuleTable();	
	
	$('#add-field-row').click(function(){ 
		addFieldRow( this );	
	});
	
	$('.remove').click(function(){
		removeFieldRow( this );
	});
	
	$('#submitsearch').click(function(){
		submitSearch();
	});
	
	$('#resetsearch').click(function(){
		$('.search-fields').find('div').each(function(i, val){
			if(i>0){
				$(val).remove();
			}
		});
		$('#search-results-head').hide();
		initModuleTable();
	});
	
	
	$('.search-fields').find('.remove').hide();

  // get field schemas
  $.get('/json/modules/field-schema', function(data){
  	field_schemas = data;
  	  $('#row-0 > .select-field').change(function(e){ 
				var obj = {
						id : $(this).find(':selected').attr('id'), 
						key: $(this).find(':selected').data('key'), 
						multiselect: $(this).find(':selected').data('multi'),
						selector : '#' + $(this).attr('id').replace('-field','') + '-input'
				}; 
				setDataSchema( obj );
			});
  });
  
  // auto-select first field
 	var sel = $('#row-0 > .select-field');
	var obj = {
			id : $(sel).find(':selected').attr('id'), 
			key: $(sel).find(':selected').data('key'), 
			multiselect: $(sel).find(':selected').data('multi'),
			selector : '#' + $(sel).attr('id').replace('-field','') + '-input'
	}; 
	setDataSchema( obj );
			
});


/*
 * Adds a new row for selecting a data field.
 */
 function addFieldRow( row ){
 		var row = $('.search-fields').find('.search-field-row').first().clone();
		var id = Math.floor(Math.random()*1000);
		row.attr('id', 'row-'+ id);
		row.find('.select-operator').attr('id', 'row-'+ id + '-operator');
		row.find('.select-field').attr('id', 'row-'+ id + '-field');
		row.find('.remove').attr('id', 'row-'+ id + '-remove');
		row.find('.select-input').empty().attr('id', 'row-'+ id + '-input');
		$('.search-fields').append( row );
		
		row.find('.select-field').change(function(e){  
				var obj = {
						id : $(this).find(':selected').attr('id'), 
						key: $(this).find(':selected').data('key'), 
						multiselect: $(this).find(':selected').data('multi'),
						selector : '#' + $(this).attr('id').replace('-field','') + '-input'
				}; 
				setDataSchema( obj );
			});
			
		row.find('.remove').click(function(){
			removeFieldRow( this );
		});
		
		$('.search-fields').find('.remove').show();
 }


/*
 * Removes a row of a data field.
 */
 function removeFieldRow( row ){
 		
		$( row ).parent().remove();
		if( $('.search-fields').find('.remove').size() === 1 ){
			$('.search-fields').find('.remove').hide();
		}else{
			$('.search-fields').find('.remove').show();
		}
 }


/*
 * Determines schema for the selected data field.
 */
 function setDataSchema ( obj ){ 
 	if( obj.multiselect ){
 		// simple
 		var select = $('<select></select>')
 			.attr('id',"field-search" + obj.selector.replace('#') )
 			.addClass('multiple-select-'+ obj.key +' select-fields mbase-search-container')
 			.attr('multiple',"multiple")
 			;
 		if( field_schemas[ obj.key ] === undefined ){
 			alert('empty_'+obj.key)
 			
 		// init tags	
 		}else if( obj.key === 'tags'){ 
 			for(var group in field_schemas[ obj.key ]){
				if( field_schemas[ obj.key ].hasOwnProperty(group) ){ 
					var gr = $('<optgroup></optgroup>')
						.attr('label', group)
						.appendTo( select );
						;	
					for(var i = 0; i < field_schemas[ obj.key ][group].length; i++){ 
						$('<option>')
							.attr('value', field_schemas[ obj.key ][group][i] )
							.text( field_schemas[ obj.key ][group][i] )
							.appendTo( gr )
							;
					}		
				}
			}// end for
			
			$( obj.selector ).html( select );
			$( obj.selector + ' >  .multiple-select-'+ obj.key ).select2();
			
		// init other multi-select fields	
 		}else{	
	 		for(var i = 0; i < field_schemas[ obj.key ].length; i++){
				$('<option>')
					.attr('value', field_schemas[ obj.key ][i] )
					.text(  field_schemas[ obj.key ][i] )
					.appendTo( select )
					;
			} 
			$( obj.selector ).html( select );
		}	 
  	// activate multi select
  	$( obj.selector + ' > .multiple-select-'+ obj.key ).select2();
  	
  	// init default input
 	}else{
 		var input = $('<input />')
 			.addClass('multiple-select-'+ obj.key +' select-fields mbase-search-container')
 			.attr('id',"field-search" + obj.selector.replace('#') )
 			.attr('type','text')
 			;
 		$( obj.selector ).html( input );
 	}
 }


/*
 * 
 */
 function submitSearch(){
 		//$('#table1').empty();
 		
 		var query = [];
 		// get data field entries 
 		$('.search-field-row').each(function(i, val){ 
 			var operator = $(val).find('.select-operator option:selected').val();
 			var field = $(val).find('.select-field option:selected').data('key');
 			var input = $(val).find('select.select-fields, input.select-fields').val();
 			
 			//if(typeof input === 'string'){
 			if($(val).find('.select-field option:selected').data('type') === 'string'){
 				var tmp = input;
 				input = [];
 				input[0] = tmp;
 			}else if($(val).find('.select-field option:selected').data('type') === 'number'){
 				if(input.split('-').length > 1){
 					// treat number ranges (todo: xxx)
 				// mongoose ::  .where('id').gt(0).lt(10)
 				}else if(input.split(' ').length > 1){
 					// treat multiple numbers
 					input = input.split(' ');
 				}else{
 					input[0] = input;
 				}
 			}
 			// build query (todo: fuzzy search xxx : cities.find({name: new RegExp(input, "i")} )
 			if( field  !== undefined && input !== '' && input !== undefined ){ 
 				var el = {};
 				if( operator === 'AND' ){ el[ field ] = { $all: input };	 } // e.g. [{"university":{"$all":["TUD/IHI"]}}]
				if( operator === 'OR' ){  el[ field ] = { $in:  input };	 }
 				if( operator === 'NOT' ){ el[ field ] = { $nin: input };	 } 
 				if( operator === 'FUZZY' ){ el[ field ] = { expr: input };   }

 				query.push( el );				 				
 			}
 		});
 		// send query
 		$.post('/modules/search', { data: query }, function(data){	
 			$('.search-results-head')
 				.show();
 			$('#search-results-count').html( ' ('+ data.length +' Treffer)' )
 				;
 			$('#table1').bootstrapTable('load', data);
 		});
 }


/*
 * Renders serach results
 */
function showSearchResults( data, fresh ){
	$('#table1').bootstrapTable({
    //url: '',//'/data/json/modules',
    data : data,
    onLoadError : function(e){ console.log(JSON.stringify(e)); },
    //    onLoadSuccess : function(e){ alert(JSON.stringify(e)); },
    //height:'500',
    showColumns : true,
    checkboxHeader : true,
   // cardView:true, // mobile view
    showExport:true,
    exportDataType:'selected',
    exportOptions: {
    	consoleLog: false,
			csvEnclosure: '"',
			csvSeparator: ',',
			csvUseBOM: true,
			displayTableName: false,
			escape: false,
			excelstyles: [ 'css','properties','to','export','to','excel' ],
			fileName: 'tableExport',
			htmlContent: false,
			ignoreColumn: [],
			ignoreRow: [],
			onCellData: null,
			outputMode: 'file',
			tbodySelector: 'tr',
			theadSelector: 'tr',
			tableName: 'myTableName',
			type: 'csv',
			worksheetName: 'xlsWorksheetName'
    },
    // search
    search: true,
    strictSearch: true,
    trimOnSearch:true,
    
    // details
    detailView : true,
    detailFormatter : function(index, row) {
			return '<a href="/modules/view/' + row._id + '">Detailansicht</a> | <a href="/data/pdf/' + row._id + '">Modulbeschreibung (PDF)</a> | <a href="/modules/edit/' + row._id + '">bearbeiten</a>'//''+index+'__'+row._id;
		},
		columns: [
		  { field: 'modultitel', title: 'Modulbezeichnung', sortable : true, order: 'asc',searchable : true }, 
		 	{ field: 'modulnr1', title: 'Modulnummer', visible:false, sortable : true, order: 'asc',searchable : true }, 
		  { field: 'modulnr2', title: 'Modulnummer 2', visible:false, sortable : true, order: 'asc',searchable : true }, 
		  { field: 'modulnr3', title: 'Modulnummer 3', visible:false, sortable : true, order: 'asc',searchable : true }, 
		  { field: 'courses', title: 'Studiengang',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'type', title: 'BA/MA',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'university', title: 'Hochschule',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'language', title: 'Sprache',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'sws_total', title: 'SWS',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'workload', title: 'Workload',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'workload_self', title: 'Workload Selbst',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'ects', title: 'ECTS',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'summer_winter', title: 'Semester',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'modulverantwortlicher', title: 'Modulverantwortliche/r',sortable : true, order: 'asc',searchable : true }, 
		  { field: 'mail', title: 'E-Mail',sortable : true, visible:false, order: 'asc',searchable : true }, 
		  { field: 'lecturers', title: 'Weitere Dozenten',sortable : true, visible:false, order: 'asc',searchable : true }, 
		  { field: 'remarks', title: 'Hinweise',sortable : true, order: 'asc',visible:false, searchable : true }, 
		  { field: 'updated_at', title: 'Letzte Änderung',sortable : true, visible:false, order: 'asc',searchable : true }
    ]
	});
}







/*
	*
	*/
function initModuleTable(){ 
	$.get('/data/json/modules', function(data){	 
	
	
		 $('#table1').bootstrapTable({
				//url: '/data/json/modules',
				data: data,
				onLoadError : function(e){ alert(JSON.stringify(e)); },
				//    onLoadSuccess : function(e){ alert(JSON.stringify(e)); },
				//height:'500',
				showColumns : true,
				checkboxHeader : true,
			 // cardView:true, // mobile view
				showExport:true,
				exportDataType:'selected',
				exportOptions: {
					consoleLog: false,
					csvEnclosure: '"',
					csvSeparator: ',',
					csvUseBOM: true,
					displayTableName: false,
					escape: false,
					excelstyles: [ 'css','properties','to','export','to','excel' ],
					fileName: 'tableExport',
					htmlContent: false,
					ignoreColumn: [],
					ignoreRow: [],
					onCellData: null,
					outputMode: 'file',
					tbodySelector: 'tr',
					theadSelector: 'tr',
					tableName: 'myTableName',
					type: 'csv',
					worksheetName: 'xlsWorksheetName'
				},
				// search
				search: true,
				strictSearch: true,
				trimOnSearch:true,
				
				// details
				detailView : true,
				detailFormatter : function(index, row) {
					return '<a href="/modules/view/' + row._id + '">Detailansicht</a> | <a href="/data/pdf/' + row._id + '">Modulbeschreibung (PDF)</a> | <a href="/modules/edit/' + row._id + '">bearbeiten</a>'//''+index+'__'+row._id;
				},
				columns: [
					{ field: 'modultitel', title: 'Modulbezeichnung', sortable : true, order: 'asc',searchable : true }, 
					{ field: 'modulnr1', title: 'Modulnummer', visible:false, sortable : true, order: 'asc',searchable : true }, 
					{ field: 'modulnr2', title: 'Modulnummer 2', visible:false, sortable : true, order: 'asc',searchable : true }, 
					{ field: 'modulnr3', title: 'Modulnummer 3', visible:false, sortable : true, order: 'asc',searchable : true }, 
					{ field: 'courses', title: 'Studiengang',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'type', title: 'BA/MA',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'university', title: 'Hochschule',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'language', title: 'Sprache',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'sws_total', title: 'SWS',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'workload', title: 'Workload',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'workload_self', title: 'Workload Selbst',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'ects', title: 'ECTS',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'summer_winter', title: 'Semester',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'modulverantwortlicher', title: 'Modulverantwortliche/r',sortable : true, order: 'asc',searchable : true }, 
					{ field: 'mail', title: 'E-Mail',sortable : true, visible:false, order: 'asc',searchable : true }, 
					{ field: 'lecturers', title: 'Weitere Dozenten',sortable : true, visible:false, order: 'asc',searchable : true }, 
					{ field: 'remarks', title: 'Hinweise',sortable : true, order: 'asc',visible:false, searchable : true }, 
					{ field: 'updated_at', title: 'Letzte Änderung',sortable : true, visible:false, order: 'asc',searchable : true }, 
				]
			});
	
		$('#table1').bootstrapTable('load', data);	
 	});	
 	
 	
 		
}

</script>


